<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator>
  <link href="https://stay4u.github.io/tag/design-pattern/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://stay4u.github.io/" rel="alternate" type="text/html" />
  <updated>2024-05-06T21:51:37+09:00</updated>
  <id>https://stay4u.github.io/tag/design-pattern/feed.xml</id>

  
  
  

  
    <title type="html">Technical Blog | </title>
  

  
    <subtitle>IT 기술 블로그</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">Design Pattern(1) - SOLID</title>
      <link href="https://stay4u.github.io/design_pattern-01-solid" rel="alternate" type="text/html" title="Design Pattern(1) - SOLID" />
      <published>2024-04-04T01:40:00+09:00</published>
      <updated>2024-04-04T01:40:00+09:00</updated>
      <id>https://stay4u.github.io/design_pattern-01-solid</id>
      <content type="html" xml:base="https://stay4u.github.io/design_pattern-01-solid">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;Design Pattern List&lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./design_pattern-01-solid&quot;&gt;Design Pattern(1) - SOLID&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;solid&quot;&gt;SOLID&lt;/h1&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;시간이 지나도 유지보수와 확장이 쉬운 시스템을 만들기 위한 5가지 원칙
[1] SRP 단일 책임 원칙
[2] OCP 개방-폐쇄 원칙
[3] LSP 리스코프 치환 원칙
[4] ISP 인터페이스 분리 원칙
[5] DIP 의존 역전 원칙
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;1-srp-단일-책임-원칙-&quot;&gt;1. SRP 단일 책임 원칙 👨‍🍼&lt;/h2&gt;
&lt;p&gt;– Single Responsibility Principle&lt;/p&gt;

&lt;h3 id=&quot;하나의-모듈module은-하나의-액터actor에-대해서만-책임져야-한다&quot;&gt;하나의 &lt;strong&gt;모듈(Module)&lt;/strong&gt;은 하나의 &lt;strong&gt;액터(Actor)&lt;/strong&gt;에 대해서만 &lt;strong&gt;책임&lt;/strong&gt;져야 한다.&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;그렇기 때문에 모듈을 변경하려는 이유는 단 하나여야 한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;🖨️ 모듈은 메서드와 클래스를 의미한다.&lt;/li&gt;
  &lt;li&gt;🧑‍🎤 액터란 특정 모듈에 대해 동일한 책임을 기대하는 사용자들의 집합이다.&lt;/li&gt;
  &lt;li&gt;👨‍🍼 책임이란 모듈의 기능 또는 수정할 기능이 액터에게만 영향을 주는 것이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;2-ocp-개방-폐쇄-원칙&quot;&gt;2. OCP 개방-폐쇄 원칙&lt;/h2&gt;
&lt;p&gt;– Open Closed Priciple&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>BigZero</name>
        
        
      </author>

      

      
        <category term="design-pattern" />
      

      
        <summary type="html">Design Pattern List Design Pattern(1) - SOLID</summary>
      

      
      
    </entry>
  
</feed>
